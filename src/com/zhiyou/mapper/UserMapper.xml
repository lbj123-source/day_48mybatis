<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--接口路径-->
<mapper namespace="com.zhiyou.mapper.UserMapper">

<!--   结果集映射
       id:标识
       type:最终需要封装的/返回的数据类型
-->
   
<resultMap id="userMapId" type="User">
   <!--
       Property 要封装的对象属性
       column  对应的列名
   -->
   <result property="id" column="id"/>
   <result property="username" column="username"/>
   <result property="password" column="password"/>
</resultMap>
<!--
    sql片段
    id:唯一标识
-->
<sql id="testsqlId">
  id,username,password,birthday,address,phone
</sql>
<!--CRUD 标签-->
<!--
   id:映射接口的方法名
   resultType: 出参==>返回值类型,与映射接口返回值类型一致,
               如果是自定义类,需要写全路径
   parameterType:入参类型,与映射接口内的方法参数类型一致
   sql 语句:
   需要传入参数的位置,使用#{}站位
-->

<select id="findUserById" resultMap="userMapId" resultType="user" parameterType="int">
      <!--      select * from user where id = #{id}-->
      select <include refid="testsqlId"/> from user where id = #{id}
   </select>

   <select id="findUserByKeyword" parameterType="String" resultMap="userMapId" resultType="User">
      select <include refid="testsqlId"/> from user
      <if test="keyword !=null">
         where username like concat('%',#{keyword},'%')
      </if>

<!--      select <include refid="testsqlId"/> from user where username like concat('%',#{keyword},'%');-->
   </select>


<!--   多字段模糊查询-->
   <select id="findUserByMoreKeyword" parameterType="map" resultMap="userMapId" resultType="User">
      select <include refid="testsqlId"/> from user where 1=1
      <choose>
         <when test="username !=null">
          and username like concat('%',#{username},'%')
         </when>
         <when test="address !=null">
            and address like concat('%',#{address},'%')
         </when>
         <otherwise>
            and phone like concat('%',#{phone},'%')
         </otherwise>
      </choose>


      <!--      select <include refid="testsqlId"/> from user where username like concat('%',#{keyword},'%');-->
   </select>


   <!--   多字段模糊查询 where if -->
   <select id="findUserByKeyword2" parameterType="map" resultMap="userMapId" resultType="User">
      select <include refid="testsqlId"/> from user
     where
      <if test="keyword !=null">
        username like concat ('%',#{keyword},'%')
      </if>

      <!--      select <include refid="testsqlId"/> from user where username like concat('%',#{keyword},'%');-->
   </select>


<!--使用where标签-->
   <select id="findUserByKeyword3" parameterType="String" resultMap="userMapId" resultType="User">
      select <include refid="testsqlId"/> from user
      <where>
         <if test="username !=null">
            username like concat('%',#{username},'%')
         </if>

      </where>

      <!--      select <include refid="testsqlId"/> from user where username like concat('%',#{keyword},'%');-->
   </select>


   <select id="findUserByListId" parameterType="list"   resultType="User">
      select <include refid="testsqlId"/> from user
      where id in
      <foreach collection="list" item="i" open="(" separator="," close=")">
           #{i}
      </foreach>
      <!--      select <include refid="testsqlId"/> from user where username like concat('%',#{keyword},'%');-->
   </select>



   <select id="findAll" resultMap="userMapId" resultType="user">
      select <include refid="testsqlId"/> from user
   </select>

   <select id="count"  resultType="int">
      select count(*) from user
   </select>

   <insert id="addOne" parameterType="User">
      insert into user values (#{id},#{username},#{password},#{birthday},#{phone},#{address})
   </insert>

   <update id="update" parameterType="Map">
      update user set  username=#{username},password=#{password},birthday=#{birthday}
      ,phone=#{phone},address=#{address} where id =${id}
   </update>

   <update id="update2">
      update user set username=#{name} where id = #{id}
   </update>



</mapper>
